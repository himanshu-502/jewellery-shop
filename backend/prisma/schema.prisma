// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  name          String
  email         String    @unique
  passwordHash  String
  phone         String
  role          String @default("buyer")   // {other values: admin}
  createdAt     DateTime  @default(now())
  address       String[]
  orders        Order[]
  reviews       Review[]
  wishlistItems Wishlist[]
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  imageBanner Bytes?
  createdAt   DateTime @default(now())
  products    Product[]
}

model Product {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  price       Decimal
  stock       Int
  version     Int       @default(autoincrement())
  createdAt   DateTime  @default(now())
  categories  Category[]
  orderItem   OrderItem[]
  wishlistItem Wishlist[]
  images      Bytes[]
  reviews     Review[]
}

model Order {
  id        Int       @id @default(autoincrement())
  user      User      @relation(fields: [userId], references: [id])
  userId    Int
  total     Decimal
  status    String   @default("In Cart")  // {other values: "delivered"}
  createdAt DateTime @default(now())
  items     OrderItem[]
}

model OrderItem {
  id         Int     @id @default(autoincrement())
  order      Order   @relation(fields: [orderId], references: [id])
  orderId    Int
  product    Product[]
  quantity   Int
  price      Decimal
}

model Review {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  rating    Int
  comment   String?
  createdAt DateTime @default(now())
}

model Wishlist {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  createdAt DateTime @default(now())
}